{"version":3,"sources":["components/AppNavbar.js","components/Input.js","components/ConsoleLogs.js","components/Home.js","components/Solo.js","components/App.js","serviceWorker.js","index.js"],"names":["AppNavbar","props","toggle","bind","state","isOpen","this","setState","Navbar","classname","light","expand","NavbarBrand","href","className","React","Component","Input","userInput","playing","Row","Col","xs","ConsoleLogs","logs","time","cps","accuracy","progress","map","log","i","icon","type","length","text","line","Home","playingSolo","handleKeyPress","handleKeyDown","handleUserInput","document","addEventListener","push","removeEventListener","event","defaultPrevented","key","keyCode","inputChar","String","fromCharCode","valid","preventDefault","slice","input","trimmed","trim","toLowerCase","args","split","history","splice","Solo","codeBlock","completed","current","charAt","incorrect","remaining","substring","finished","pressEnter","backspace","seconds","incorrectTyped","numInputs","handleCorrectInput","handleIncorrectInput","handleBackspace","getLineNumbers","getCurrentLineNumber","clearLog","startTimer","msToTime","getProgress","toFixed","clearInterval","timer","setTimeout","numLines","lineNumbers","startTime","Date","now","setInterval","timeElapsed","Math","floor","ms","milliseconds","parseInt","completion","language","style","github","customStyle","whiteSpace","marginBottom","backgroundColor","tabSize","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","padding","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a1084c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../css/AppNavbar.css\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand\r\n} from \"reactstrap\";\r\nimport Logo from \"@material-ui/icons/Code\";\r\n\r\nexport default class AppNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar classname=\"navbar\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">\r\n            <Logo className=\"logo\" />\r\n            HFCYTHW\r\n          </NavbarBrand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./../css/Console.css\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport ArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nexport default class Input extends React.Component {\r\n  render() {\r\n    const { userInput, playing } = this.props;\r\n\r\n    return (\r\n      <div className=\"consoleInput\">\r\n        <Row>\r\n          <Col xs=\"1\">\r\n            <ArrowRight className=\"arrowRight\" />\r\n          </Col>\r\n          <Col xs=\"11\">\r\n            {!playing && userInput}\r\n            {!playing && (<span className=\"current\"> </span>)}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./../css/Console.css\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport ArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport WarningIcon from \"@material-ui/icons/WarningRounded\";\r\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\r\n\r\nexport default class ConsoleLogs extends React.Component {\r\n  render() {\r\n    const { logs, playing, time, cps, accuracy, progress } = this.props;\r\n\r\n    return (\r\n      <div className=\"consoleLogs\">\r\n        {logs.map((log, i) => {\r\n          let className = \"log\";\r\n          let icon = <ArrowRight className=\"arrowRight invisible\" />;\r\n\r\n          switch (log.type) {\r\n            case \"warning\":\r\n              className = \"warning log\";\r\n              icon = <WarningIcon className=\"warningIcon\" />;\r\n              break;\r\n            case \"error\":\r\n              className = \"error log\";\r\n              icon = <ErrorIcon className=\"errorIcon\" />;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          if (playing || i < logs.length - 1) {\r\n            className += \" logBorder\";\r\n          }\r\n\r\n          return (\r\n            <div className={className}>\r\n              <Row>\r\n                <Col xs=\"1\">{icon}</Col>\r\n                <Col xs=\"9\">\r\n                  <div className=\"logText\">{log.text}</div>\r\n                </Col>\r\n                <Col xs=\"2\">\r\n                  {log.line && (\r\n                    <div className=\"logLine\">{\"Line \" + log.line}</div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          );\r\n        })}\r\n        {playing && (\r\n          <div className=\"stats\">\r\n            <Row>\r\n              <Col xs=\"1\">\r\n                <ArrowRight className=\"arrowRight invisible\" />\r\n              </Col>\r\n              <Col>{\"Time\\nCPS\\nAccuracy\\nProgress\"}</Col>\r\n              <Col>\r\n                <ArrowRight className=\"arrowRight invisible\" />\r\n              </Col>\r\n              <Col>\r\n                <div className=\"colons\">{\":\\n:\\n:\\n:\"}</div>\r\n              </Col>\r\n              <Col>\r\n                <ArrowRight className=\"arrowRight invisible\" />\r\n              </Col>\r\n              <Col>\r\n                {time + \"\\n\"}\r\n                {cps + \"\\n\"}\r\n                {accuracy + \"%\\n\"}\r\n                {progress}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./../css/Home.css\";\r\nimport AppNavbar from \"./AppNavbar.js\";\r\nimport Input from \"./Input\";\r\nimport ConsoleLogs from \"./ConsoleLogs\";\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: \"\",\r\n      logs: [],\r\n      playingSolo: false,\r\n    };\r\n\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { logs } = this.state;\r\n\r\n    document.addEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n\r\n    logs.push({\r\n      type: \"info\",\r\n      text: \"Welcome to HFCYTHW.\",\r\n    });\r\n\r\n    this.setState({ logs });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\r\n  }\r\n\r\n  handleKeyPress(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n    const inputChar = String.fromCharCode(key);\r\n    const valid = (key >= 32 && key <= 126) || key === 13;\r\n\r\n    if (inputChar === \" \") {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (valid) {\r\n      let { userInput, logs } = this.state;\r\n\r\n      if (key === 13) {\r\n        this.handleUserInput(userInput);\r\n        userInput = \"\";\r\n      } else {\r\n        userInput += inputChar;\r\n      }\r\n\r\n      this.setState({ userInput, logs });\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n\r\n    if (key === 8) {\r\n      const { userInput } = this.state;\r\n\r\n      this.setState({ userInput: userInput.slice(0, -1) });\r\n    } else if (key === 9 || key === 11) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleUserInput(input) {\r\n    const trimmed = input.trim().toLowerCase();\r\n\r\n    if (trimmed.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let { logs } = this.state;\r\n    const args = trimmed.split(/\\s+/);\r\n\r\n    if (trimmed === \"help\") {\r\n      logs.push({\r\n        type: \"info\",\r\n        text:\r\n          \"help\\t\\t\\tView a list of valid commands\\nabout\\t\\t\\tRead a description of the app\\nplay [solo|multi]\\tInitiates a solo or multiplayer game depending on the provided argument\",\r\n      });\r\n    } else if (trimmed === \"about\") {\r\n      logs.push({\r\n        type: \"info\",\r\n        text:\r\n          \"I wanted to know how fast I could type `Hello World!`\\nso I made this app called HFCYTHW (How Fast Can You Type Hello World).\\nEnjoy ;) - @anoojlal on Github\",\r\n      });\r\n    } else if (args[0] === \"play\") {\r\n      if (args.length < 2) {\r\n        logs.push({\r\n          type: \"warning\",\r\n          text: \"Specify a mode to play with an argument of `solo` or `multi`.\",\r\n        });\r\n      } else if (args[1] === \"solo\") {\r\n        this.props.history.push(\"/solo\");\r\n      } else if (args[1] === \"multi\") {\r\n        logs.push({\r\n          type: \"info\",\r\n          text:\r\n            \"Multiplayer functionality coming soon (jk coderacer.dev exists lol)\",\r\n        });\r\n      } else {\r\n        logs.push({\r\n          type: \"error\",\r\n          text: `\"${args[1]}\" is not a valid argument for the \\`play\\` command. Try \\`solo\\` or \\`multi\\`.`,\r\n        });\r\n      }\r\n    } else {\r\n      logs.push({\r\n        type: \"error\",\r\n        text: `\"${input.trim()}\" is not a valid command. Type \\`help\\` for a list of commands.`,\r\n      });\r\n    }\r\n\r\n    if (logs.length > 4) {\r\n      while (logs.length > 4) {\r\n        logs.splice(0, 1);\r\n      }\r\n\r\n      this.setState({ logs });\r\n    }\r\n\r\n    this.setState({ logs });\r\n  }\r\n\r\n  render() {\r\n    const { userInput, logs } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar />\r\n        <div className=\"console\">\r\n          <div className=\"sticky\">\r\n            <ConsoleLogs logs={logs} />\r\n            <div className=\"consoleBreak\">\r\n              <br />\r\n            </div>\r\n            <Input userInput={userInput} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./../css/Solo.css\";\r\nimport \"./../css/Console.css\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { github } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport AppNavbar from \"./AppNavbar.js\";\r\nimport PressEnter from \"@material-ui/icons/KeyboardReturn\";\r\nimport Backspace from \"@material-ui/icons/BackspaceOutlined\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport ConsoleLogs from \"./ConsoleLogs\";\r\nimport Input from \"./Input\";\r\n\r\nexport default class Solo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const codeBlock =\r\n      'public class HelloWorld {\\n\\tpublic static void main(String[] args) {\\n\\t\\tSystem.out.println(\"Hello World!\");\\n\\t}\\n}';\r\n\r\n    this.state = {\r\n      codeBlock: codeBlock,\r\n      length: codeBlock.length,\r\n      completed: \"\",\r\n      current: codeBlock.charAt(0),\r\n      incorrect: \"\",\r\n      remaining: codeBlock.substring(1),\r\n      finished: false,\r\n      pressEnter: false,\r\n      backspace: false,\r\n      logs: [],\r\n      playing: false,\r\n      time: \"0:00.0\",\r\n      cps: 0,\r\n      accuracy: 0.0,\r\n      seconds: 0,\r\n      incorrectTyped: 0,\r\n      progress: \"[--------------------]\",\r\n      numInputs: 0,\r\n    };\r\n\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleCorrectInput = this.handleCorrectInput.bind(this);\r\n    this.handleIncorrectInput = this.handleIncorrectInput.bind(this);\r\n    this.handleBackspace = this.handleBackspace.bind(this);\r\n    this.getLineNumbers = this.getLineNumbers.bind(this);\r\n    this.getCurrentLineNumber = this.getCurrentLineNumber.bind(this);\r\n    this.clearLog = this.clearLog.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.msToTime = this.msToTime.bind(this);\r\n    this.getProgress = this.getProgress.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\r\n  }\r\n\r\n  handleKeyPress(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n    const inputChar = String.fromCharCode(key);\r\n    const valid = (key >= 32 && key <= 126) || key === 13;\r\n\r\n    if (inputChar === \" \") {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (valid) {\r\n      const { current, pressEnter, incorrect, playing } =\r\n        this.state;\r\n\r\n      if (!playing) {\r\n        this.setState({\r\n          playing: true,\r\n        });\r\n\r\n        this.startTimer();\r\n      }\r\n\r\n      if (\r\n        incorrect.length === 0 &&\r\n        (inputChar === current || (pressEnter && key === 13))\r\n      ) {\r\n        this.handleCorrectInput();\r\n      } else {\r\n        this.handleIncorrectInput(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n\r\n    if (key === 8) {\r\n      this.handleBackspace();\r\n    } else if (key === 9 || key === 11) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleCorrectInput() {\r\n    let {\r\n      codeBlock,\r\n      completed,\r\n      current,\r\n      remaining,\r\n      finished,\r\n      logs,\r\n      seconds,\r\n      cps,\r\n      progress,\r\n      numInputs,\r\n    } = this.state;\r\n\r\n    completed = completed + current;\r\n    current = remaining.charAt(0);\r\n    remaining = remaining.substring(1);\r\n    finished = codeBlock === completed;\r\n    cps = (completed.length / (seconds === 0 ? 1 : seconds)).toFixed(2);\r\n\r\n    if (finished) {\r\n      document.removeEventListener(\"keypress\", this.handleKeyPress, false);\r\n      document.removeEventListener(\"keydown\", this.handleKeyDown, false);\r\n\r\n      logs.push({\r\n        type: \"info\",\r\n        text: \"Finished. Hit Refresh to play again.\",\r\n      });\r\n\r\n      clearInterval(this.timer);\r\n    }\r\n\r\n    this.setState({\r\n      completed: completed,\r\n      current: current,\r\n      remaining: remaining,\r\n      pressEnter: current === \"\\n\",\r\n      backspace: false,\r\n      finished: finished,\r\n      logs: logs,\r\n      cps: cps,\r\n      numInputs: numInputs + 1,\r\n      accuracy: ((completed.length / (numInputs + 1)) * 100).toFixed(2),\r\n    });\r\n\r\n    progress = this.getProgress(completed.length, remaining.length);\r\n\r\n    this.setState({ progress: progress });\r\n\r\n    if (current === \"\\t\") {\r\n      this.handleCorrectInput();\r\n    }\r\n  }\r\n\r\n  handleIncorrectInput(key) {\r\n    let { incorrect, current, logs, pressEnter, numInputs, completed } =\r\n      this.state;\r\n\r\n    const inputChar = String.fromCharCode(key);\r\n    let log = null;\r\n\r\n    if (incorrect.length < 5) {\r\n      incorrect = incorrect + (key === 13 ? \" \" : inputChar);\r\n\r\n      if (incorrect.length === 1) {\r\n        log = {\r\n          type: \"warning\",\r\n          text:\r\n            \"Found '\" +\r\n            (key === 13 ? \"[Enter]\" : inputChar) +\r\n            \"'; expected '\" +\r\n            (pressEnter ? \"[Enter]\" : current) +\r\n            \"'\",\r\n          line: this.getCurrentLineNumber(),\r\n        };\r\n      } else if (incorrect.length === 5) {\r\n        log = {\r\n          type: \"error\",\r\n          text: \"Backspace your mistakes before progressing\",\r\n          line: this.getCurrentLineNumber(),\r\n        };\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      incorrect: incorrect,\r\n      backspace: true,\r\n      numInputs: numInputs + 1,\r\n      accuracy: ((completed.length / (numInputs + 1)) * 100).toFixed(2),\r\n    });\r\n\r\n    if (log) {\r\n      if (logs.length >= 3) {\r\n        while (logs.length >= 3) {\r\n          logs.splice(0, 1);\r\n        }\r\n\r\n        this.setState({ logs });\r\n        logs.push(log);\r\n        this.setState({ logs });\r\n      } else {\r\n        logs.push(log);\r\n        this.setState({ logs });\r\n      }\r\n\r\n      this.clearLog(log);\r\n    }\r\n  }\r\n\r\n  clearLog(log) {\r\n    setTimeout(() => {\r\n      const { logs } = this.state;\r\n\r\n      if (logs[logs.length - 1] === log) {\r\n        logs.splice(0, 1);\r\n        this.setState({ logs: logs });\r\n\r\n        if (logs.length > 0) {\r\n          this.clearLog(logs[logs.length - 1]);\r\n        }\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  handleBackspace() {\r\n    let { completed, incorrect, current, remaining, progress } = this.state;\r\n\r\n    if (incorrect.length > 0) {\r\n      incorrect = incorrect.substring(0, incorrect.length - 1);\r\n    } else if (completed.length === 0) {\r\n      return;\r\n    } else {\r\n      remaining = current + remaining;\r\n      current = completed.charAt(completed.length - 1);\r\n      completed = completed.substring(0, completed.length - 1);\r\n      progress = this.getProgress(completed.length, remaining.length);\r\n    }\r\n\r\n    this.setState({\r\n      completed: completed,\r\n      incorrect: incorrect,\r\n      remaining: remaining,\r\n      pressEnter: current === \"\\n\",\r\n      backspace: incorrect.length > 0,\r\n      current: current,\r\n      progress: progress,\r\n    });\r\n\r\n    if (current === \"\\t\") {\r\n      this.handleBackspace();\r\n    }\r\n  }\r\n\r\n  getLineNumbers() {\r\n    const numLines = this.state.codeBlock.split(\"\\n\").length;\r\n    let lineNumbers = \"\";\r\n\r\n    for (let i = 1; i <= numLines; i++) {\r\n      lineNumbers = lineNumbers + \" \" + i + \"\\n\";\r\n    }\r\n\r\n    return lineNumbers;\r\n  }\r\n\r\n  getCurrentLineNumber() {\r\n    return this.state.completed.split(\"\\n\").length;\r\n  }\r\n\r\n  startTimer() {\r\n    const startTime = Date.now();\r\n\r\n    this.timer = setInterval(() => {\r\n      const timeElapsed = Date.now() - startTime;\r\n\r\n      this.setState({\r\n        time: this.msToTime(timeElapsed),\r\n        seconds: Math.floor((timeElapsed / 1000) % 60),\r\n      });\r\n    }, 1);\r\n  }\r\n\r\n  msToTime(ms) {\r\n    let milliseconds = parseInt((ms % 1000) / 100),\r\n      seconds = Math.floor((ms / 1000) % 60),\r\n      minutes = Math.floor((ms / (1000 * 60)) % 60);\r\n\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    return minutes + \":\" + seconds + \".\" + milliseconds;\r\n  }\r\n\r\n  getProgress(completed, remaining) {\r\n    if (completed === 0) {\r\n      return \"[--------------------]\";\r\n    }\r\n\r\n    if (this.state.finished) {\r\n      return \"[********************]\";\r\n    }\r\n\r\n    let progress = \"[\";\r\n    let completion = Math.floor((completed / (completed + remaining)) * 20);\r\n\r\n    if (completion === 20) {\r\n      completion--;\r\n    }\r\n\r\n    for (let i = 0; i < completion; i++) {\r\n      progress = progress + \"*\";\r\n    }\r\n\r\n    progress = progress + \"o\";\r\n\r\n    for (let i = 0; i < 19 - completion; i++) {\r\n      progress = progress + \"-\";\r\n    }\r\n\r\n    progress = progress + \"]\";\r\n\r\n    return progress;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      codeBlock,\r\n      completed,\r\n      current,\r\n      incorrect,\r\n      remaining,\r\n      pressEnter,\r\n      backspace,\r\n      logs,\r\n      time,\r\n      cps,\r\n      accuracy,\r\n      progress,\r\n    } = this.state;\r\n\r\n    const customStyle = {\r\n      whiteSpace: \"pre-wrap\",\r\n      marginBottom: \"0px\",\r\n      backgroundColor: \"white\",\r\n      tabSize: \"4\",\r\n      webkitTouchCallout: \"none\" /* iOS Safari */,\r\n      webkitUserSelect: \"none\" /* Safari */,\r\n      khtmlUserSelect: \"none\" /* Konqueror HTML */,\r\n      mozUserSelect: \"none\" /* Firefox */,\r\n      msUserSelect: \"none\" /* Internet Explorer/Edge */,\r\n      userSelect: \"none\",\r\n      padding: \"0em\",\r\n      // display: \"none\"\r\n    };\r\n\r\n    const lineNumbers = this.getLineNumbers();\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar />\r\n        <div className=\"solo\">\r\n          <div className=\"codeBlock\">\r\n            <Row>\r\n              <Col xs=\"1\">\r\n                <div className=\"lineNumbers\">{lineNumbers}</div>\r\n              </Col>\r\n              <Col xs=\"11\">\r\n                <div className=\"overlay\">\r\n                  <span>{completed}</span>\r\n                  {!backspace && (\r\n                    <span className=\"current\">\r\n                      {pressEnter && <PressEnter className=\"pressEnter\" />}\r\n                      {current}\r\n                    </span>\r\n                  )}\r\n                  <span className=\"incorrect\">\r\n                    {incorrect}\r\n                    {backspace && <Backspace className=\"backspace\" />}\r\n                  </span>\r\n                  <span>{remaining}</span>\r\n                </div>\r\n                <SyntaxHighlighter\r\n                  language=\"java\"\r\n                  style={github}\r\n                  customStyle={customStyle}\r\n                >\r\n                  {codeBlock}\r\n                </SyntaxHighlighter>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"console\">\r\n            <div className=\"sticky\">\r\n              <ConsoleLogs\r\n                logs={logs}\r\n                time={time}\r\n                cps={cps}\r\n                accuracy={accuracy}\r\n                progress={progress}\r\n                playing\r\n              />\r\n              <div className=\"consoleBreak\">\r\n                <br />\r\n              </div>\r\n              <Input playing />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./../css/App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Solo from \"./Solo\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/solo\" exact component={Solo} />\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}