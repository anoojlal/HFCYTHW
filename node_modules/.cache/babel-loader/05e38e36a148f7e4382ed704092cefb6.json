{"ast":null,"code":"var _jsxFileName = \"/Users/anoojlal/Documents/repos/HFCYTHW/idk-yet/src/components/Home.js\";\nimport React from \"react\";\nimport \"./../css/Home.css\";\nimport AppNavbar from \"./AppNavbar.js\";\nimport Input from \"./Input\";\nimport ConsoleLogs from \"./ConsoleLogs\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      logs: [],\n      playingSolo: false\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleUserInput = this.handleUserInput.bind(this);\n  }\n\n  componentDidMount() {\n    let {\n      logs\n    } = this.state;\n    document.addEventListener(\"keypress\", this.handleKeyPress, false);\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\n    logs.push({\n      type: \"info\",\n      text: \"Welcome to HFCYTHW.\"\n    });\n    this.setState({\n      logs\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keypress\", this.handleKeyPress, false);\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\n  }\n\n  handleKeyPress(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const key = event.keyCode;\n    const inputChar = String.fromCharCode(key);\n    const valid = key >= 32 && key <= 126 || key === 13;\n\n    if (inputChar === \" \") {\n      event.preventDefault();\n    }\n\n    if (valid) {\n      let {\n        userInput,\n        logs\n      } = this.state;\n\n      if (key === 13) {\n        this.handleUserInput(userInput);\n        userInput = \"\";\n      } else {\n        userInput += inputChar;\n      }\n\n      this.setState({\n        userInput,\n        logs\n      });\n    }\n  }\n\n  handleKeyDown(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const key = event.keyCode;\n\n    if (key === 8) {\n      const {\n        userInput\n      } = this.state;\n      this.setState({\n        userInput: userInput.slice(0, -1)\n      });\n    } else if (key === 9 || key === 11) {\n      event.preventDefault();\n    }\n  }\n\n  handleUserInput(input) {\n    const trimmed = input.trim().toLowerCase();\n\n    if (trimmed.length === 0) {\n      return;\n    }\n\n    let {\n      logs\n    } = this.state;\n    const args = trimmed.split(/\\s+/);\n\n    if (trimmed === \"help\") {\n      logs.push({\n        type: \"info\",\n        text: \"help\\t\\t\\tView a list of valid commands\\nabout\\t\\t\\tRead a description of the app\\nplay [solo|multi]\\tInitiates a solo or multiplayer game depending on the provided argument\"\n      });\n    } else if (trimmed === \"about\") {\n      logs.push({\n        type: \"info\",\n        text: \"I wanted to know how fast I could type `Hello World!`\\nso I made this app called HFCYTHW (How Fast Can You Type Hello World).\\nEnjoy ;) - @anoojlal on Github\"\n      });\n    } else if (args[0] === \"play\") {\n      if (args.length < 2) {\n        logs.push({\n          type: \"warning\",\n          text: \"Specify a mode to play with an argument of `solo` or `multi`.\"\n        });\n      } else if (args[1] === \"solo\") {\n        this.props.history.push(\"/solo\");\n      } else if (args[1] === \"multi\") {\n        logs.push({\n          type: \"info\",\n          text: \"Multiplayer functionality coming soon (jk coderacer.dev exists lol)\"\n        });\n      } else {\n        logs.push({\n          type: \"error\",\n          text: `\"${args[1]}\" is not a valid argument for the \\`play\\` command. Try \\`solo\\` or \\`multi\\`.`\n        });\n      }\n    } else {\n      logs.push({\n        type: \"error\",\n        text: `\"${input.trim()}\" is not a valid command. Type \\`help\\` for a list of commands.`\n      });\n    }\n\n    if (logs.length > 4) {\n      while (logs.length > 4) {\n        logs.splice(0, 1);\n      }\n\n      this.setState({\n        logs\n      });\n    }\n\n    this.setState({\n      logs\n    });\n  }\n\n  render() {\n    const {\n      userInput,\n      logs\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"console\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sticky\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ConsoleLogs, {\n      logs: logs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"consoleBreak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Input, {\n      userInput: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anoojlal/Documents/repos/HFCYTHW/idk-yet/src/components/Home.js"],"names":["React","AppNavbar","Input","ConsoleLogs","Home","Component","constructor","props","state","userInput","logs","playingSolo","handleKeyPress","bind","handleKeyDown","handleUserInput","componentDidMount","document","addEventListener","push","type","text","setState","componentWillUnmount","removeEventListener","event","defaultPrevented","key","keyCode","inputChar","String","fromCharCode","valid","preventDefault","slice","input","trimmed","trim","toLowerCase","length","args","split","history","splice","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./../css/Home.css\";\r\nimport AppNavbar from \"./AppNavbar.js\";\r\nimport Input from \"./Input\";\r\nimport ConsoleLogs from \"./ConsoleLogs\";\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: \"\",\r\n      logs: [],\r\n      playingSolo: false,\r\n    };\r\n\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleUserInput = this.handleUserInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { logs } = this.state;\r\n\r\n    document.addEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n\r\n    logs.push({\r\n      type: \"info\",\r\n      text: \"Welcome to HFCYTHW.\",\r\n    });\r\n\r\n    this.setState({ logs });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keypress\", this.handleKeyPress, false);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\r\n  }\r\n\r\n  handleKeyPress(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n    const inputChar = String.fromCharCode(key);\r\n    const valid = (key >= 32 && key <= 126) || key === 13;\r\n\r\n    if (inputChar === \" \") {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (valid) {\r\n      let { userInput, logs } = this.state;\r\n\r\n      if (key === 13) {\r\n        this.handleUserInput(userInput);\r\n        userInput = \"\";\r\n      } else {\r\n        userInput += inputChar;\r\n      }\r\n\r\n      this.setState({ userInput, logs });\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const key = event.keyCode;\r\n\r\n    if (key === 8) {\r\n      const { userInput } = this.state;\r\n\r\n      this.setState({ userInput: userInput.slice(0, -1) });\r\n    } else if (key === 9 || key === 11) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleUserInput(input) {\r\n    const trimmed = input.trim().toLowerCase();\r\n\r\n    if (trimmed.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let { logs } = this.state;\r\n    const args = trimmed.split(/\\s+/);\r\n\r\n    if (trimmed === \"help\") {\r\n      logs.push({\r\n        type: \"info\",\r\n        text:\r\n          \"help\\t\\t\\tView a list of valid commands\\nabout\\t\\t\\tRead a description of the app\\nplay [solo|multi]\\tInitiates a solo or multiplayer game depending on the provided argument\",\r\n      });\r\n    } else if (trimmed === \"about\") {\r\n      logs.push({\r\n        type: \"info\",\r\n        text:\r\n          \"I wanted to know how fast I could type `Hello World!`\\nso I made this app called HFCYTHW (How Fast Can You Type Hello World).\\nEnjoy ;) - @anoojlal on Github\",\r\n      });\r\n    } else if (args[0] === \"play\") {\r\n      if (args.length < 2) {\r\n        logs.push({\r\n          type: \"warning\",\r\n          text: \"Specify a mode to play with an argument of `solo` or `multi`.\",\r\n        });\r\n      } else if (args[1] === \"solo\") {\r\n        this.props.history.push(\"/solo\");\r\n      } else if (args[1] === \"multi\") {\r\n        logs.push({\r\n          type: \"info\",\r\n          text:\r\n            \"Multiplayer functionality coming soon (jk coderacer.dev exists lol)\",\r\n        });\r\n      } else {\r\n        logs.push({\r\n          type: \"error\",\r\n          text: `\"${args[1]}\" is not a valid argument for the \\`play\\` command. Try \\`solo\\` or \\`multi\\`.`,\r\n        });\r\n      }\r\n    } else {\r\n      logs.push({\r\n        type: \"error\",\r\n        text: `\"${input.trim()}\" is not a valid command. Type \\`help\\` for a list of commands.`,\r\n      });\r\n    }\r\n\r\n    if (logs.length > 4) {\r\n      while (logs.length > 4) {\r\n        logs.splice(0, 1);\r\n      }\r\n\r\n      this.setState({ logs });\r\n    }\r\n\r\n    this.setState({ logs });\r\n  }\r\n\r\n  render() {\r\n    const { userInput, logs } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar />\r\n        <div className=\"console\">\r\n          <div className=\"sticky\">\r\n            <ConsoleLogs logs={logs} />\r\n            <div className=\"consoleBreak\">\r\n              <br />\r\n            </div>\r\n            <Input userInput={userInput} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}